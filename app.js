
const trafficLightCycle = [
  { color: 'üü•', duration: 10 },
  { color: 'üü®', duration: 3 },
  { color: 'üü¢', duration: 7 }
];
let currentIndex = 0;
let remaining = trafficLightCycle[currentIndex].duration;

function updateDisplay() {
  const current = trafficLightCycle[currentIndex];
  document.getElementById('colorDisplay').innerHTML =
    `–¶–≤–µ—Ç: ${current.color} <br/> –î–æ —Å–º–µ–Ω—ã: ${remaining} —Å`;
}

/*setInterval(() => {
  remaining--;
  if (remaining <= 0) {
    currentIndex = (currentIndex + 1) % trafficLightCycle.length;
    remaining = trafficLightCycle[currentIndex].duration;
  }
  updateDisplay();
}, 1000);*/

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
const map = L.map('map').setView([49.083798038160786, 33.4204394941353], 17);
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  attribution: '¬© OpenStreetMap contributors'
}).addTo(map);

// –°–≤–µ—Ç–æ—Ñ–æ—Ä
/*L.circleMarker([49.083798038160786, 33.4204394941353], {
  radius: 10,
  color: 'black',
  fillColor: 'lime',
  fillOpacity: 1
}).addTo(map).bindPopup('–°–≤–µ—Ç–æ—Ñ–æ—Ä');

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if ('geolocation' in navigator) {
  navigator.geolocation.getCurrentPosition(
    (position) => {
      const lat = position.coords.latitude;
      const lon = position.coords.longitude;
      const marker = L.circleMarker([lat, lon], {
        radius: 8,
        color: 'blue',
        fillColor: 'blue',
        fillOpacity: 0.7
      }).addTo(map).bindPopup("–í—ã –∑–¥–µ—Å—å");
      map.setView([lat, lon], 17);
    },
    (err) => {
      console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:", err.message);
    }
  );
} else {
  alert("–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é");
}*/
